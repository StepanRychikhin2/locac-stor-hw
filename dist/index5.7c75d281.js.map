{"mappings":"ACAA,MAAM,EAAc,SAAS,cAAc,CAAC,eACtC,EAAiB,SAAS,cAAc,CAAC,aACzC,EAAgB,SAAS,cAAc,CAAC,YACxC,EAAa,SAAS,cAAc,CAAC,SACrC,EAAa,SAAS,cAAc,CAAC,SACrC,EAAc,SAAS,cAAc,CAAC,eAGtC,EAAW,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,cAAgB,EAAE,CAEnE,SAAS,IACL,aAAa,OAAO,CAAC,WAAY,KAAK,SAAS,CAAC,GACpD,CAEA,SAAS,IACL,EAAY,SAAS,CAAG,GAExB,EAAS,OAAO,CAAC,CAAC,EAAS,KACvB,IAAM,EAAiB,SAAS,aAAa,CAAC,OAC9C,EAAe,SAAS,CAAC,GAAG,CAAC,WAE7B,IAAM,EAAY,SAAS,aAAa,CAAC,QACzC,CAAA,EAAU,WAAW,CAAG,CAAC,EAAE,EAAQ,SAAS,CAAC,CAAC,EAAE,EAAQ,QAAQ,CAAC,CAAC,CAElE,IAAM,EAAa,SAAS,aAAa,CAAC,QAC1C,CAAA,EAAW,WAAW,CAAG,CAAC,OAAO,EAAE,EAAQ,KAAK,CAAC,CAAC,CAElD,IAAM,EAAa,SAAS,aAAa,CAAC,QAC1C,CAAA,EAAW,WAAW,CAAG,CAAC,OAAO,EAAE,EAAQ,KAAK,CAAC,CAAC,CAElD,IAAM,EAAa,SAAS,aAAa,CAAC,SAC1C,CAAA,EAAW,WAAW,CAAG,OACzB,EAAW,gBAAgB,CAAC,QAAS,KACjC,IAAM,EAAe,OAAO,0BAA2B,EAAQ,SAAS,EAClE,EAAc,OAAO,yBAA0B,EAAQ,QAAQ,EAC/D,EAAW,OAAO,4BAA6B,EAAQ,KAAK,EAC5D,EAAW,OAAO,6BAA8B,EAAQ,KAAK,CAE9C,QAAjB,GAAyB,AAAgB,OAAhB,GAAwB,AAAa,OAAb,GAAqB,AAAa,OAAb,IACtE,CAAQ,CAAC,EAAM,CAAG,CACd,UAAW,EAAa,IAAI,GAC5B,SAAU,EAAY,IAAI,GAC1B,MAAO,EAAS,IAAI,GACpB,MAAO,EAAS,IAAI,EACxB,EACA,IACA,IAER,GAEA,IAAM,EAAe,SAAS,aAAa,CAAC,SAC5C,CAAA,EAAa,WAAW,CAAG,SAC3B,EAAa,gBAAgB,CAAC,QAAS,KACnC,EAAS,MAAM,CAAC,EAAO,GACvB,IACA,GACJ,GAEA,EAAe,WAAW,CAAC,GAC3B,EAAe,WAAW,CAAC,GAC3B,EAAe,WAAW,CAAC,GAC3B,EAAe,WAAW,CAAC,GAC3B,EAAe,WAAW,CAAC,GAE3B,EAAY,WAAW,CAAC,EAC5B,EACJ,CAEA,EAAY,gBAAgB,CAAC,SAAU,SAAU,CAAK,EAClD,EAAM,cAAc,GAEpB,IAAM,EAAa,CACf,UAAW,EAAe,KAAK,CAAC,IAAI,GACpC,SAAU,EAAc,KAAK,CAAC,IAAI,GAClC,MAAO,EAAW,KAAK,CAAC,IAAI,GAC5B,MAAO,EAAW,KAAK,CAAC,IAAI,EAChC,EAEA,EAAS,IAAI,CAAC,GACd,IACA,EAAY,KAAK,GACjB,GACJ,GAEA","sources":["<anon>","index5.js"],"sourcesContent":["const contactForm = document.getElementById(\"contactForm\");\nconst firstNameInput = document.getElementById(\"firstName\");\nconst lastNameInput = document.getElementById(\"lastName\");\nconst phoneInput = document.getElementById(\"phone\");\nconst emailInput = document.getElementById(\"email\");\nconst contactList = document.getElementById(\"contactList\");\n// Load contacts from localStorage\nconst contacts = JSON.parse(localStorage.getItem(\"contacts\")) || [];\nfunction saveContacts() {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n}\nfunction renderContacts() {\n    contactList.innerHTML = \"\";\n    contacts.forEach((contact, index)=>{\n        const contactElement = document.createElement(\"div\");\n        contactElement.classList.add(\"contact\");\n        const nameLabel = document.createElement(\"label\");\n        nameLabel.textContent = `${contact.firstName} ${contact.lastName}`;\n        const phoneLabel = document.createElement(\"label\");\n        phoneLabel.textContent = `Phone: ${contact.phone}`;\n        const emailLabel = document.createElement(\"label\");\n        emailLabel.textContent = `Email: ${contact.email}`;\n        const editButton = document.createElement(\"button\");\n        editButton.textContent = \"Edit\";\n        editButton.addEventListener(\"click\", ()=>{\n            const newFirstName = prompt(\"Enter a new first name:\", contact.firstName);\n            const newLastName = prompt(\"Enter a new last name:\", contact.lastName);\n            const newPhone = prompt(\"Enter a new phone number:\", contact.phone);\n            const newEmail = prompt(\"Enter a new email address:\", contact.email);\n            if (newFirstName !== null && newLastName !== null && newPhone !== null && newEmail !== null) {\n                contacts[index] = {\n                    firstName: newFirstName.trim(),\n                    lastName: newLastName.trim(),\n                    phone: newPhone.trim(),\n                    email: newEmail.trim()\n                };\n                saveContacts();\n                renderContacts();\n            }\n        });\n        const deleteButton = document.createElement(\"button\");\n        deleteButton.textContent = \"Delete\";\n        deleteButton.addEventListener(\"click\", ()=>{\n            contacts.splice(index, 1);\n            saveContacts();\n            renderContacts();\n        });\n        contactElement.appendChild(nameLabel);\n        contactElement.appendChild(phoneLabel);\n        contactElement.appendChild(emailLabel);\n        contactElement.appendChild(editButton);\n        contactElement.appendChild(deleteButton);\n        contactList.appendChild(contactElement);\n    });\n}\ncontactForm.addEventListener(\"submit\", function(event) {\n    event.preventDefault();\n    const newContact = {\n        firstName: firstNameInput.value.trim(),\n        lastName: lastNameInput.value.trim(),\n        phone: phoneInput.value.trim(),\n        email: emailInput.value.trim()\n    };\n    contacts.push(newContact);\n    saveContacts();\n    contactForm.reset();\n    renderContacts();\n});\nrenderContacts();\n\n//# sourceMappingURL=index5.7c75d281.js.map\n","const contactForm = document.getElementById('contactForm');\r\nconst firstNameInput = document.getElementById('firstName');\r\nconst lastNameInput = document.getElementById('lastName');\r\nconst phoneInput = document.getElementById('phone');\r\nconst emailInput = document.getElementById('email');\r\nconst contactList = document.getElementById('contactList');\r\n\r\n// Load contacts from localStorage\r\nconst contacts = JSON.parse(localStorage.getItem('contacts')) || [];\r\n\r\nfunction saveContacts() {\r\n    localStorage.setItem('contacts', JSON.stringify(contacts));\r\n}\r\n\r\nfunction renderContacts() {\r\n    contactList.innerHTML = '';\r\n\r\n    contacts.forEach((contact, index) => {\r\n        const contactElement = document.createElement('div');\r\n        contactElement.classList.add('contact');\r\n\r\n        const nameLabel = document.createElement('label');\r\n        nameLabel.textContent = `${contact.firstName} ${contact.lastName}`;\r\n\r\n        const phoneLabel = document.createElement('label');\r\n        phoneLabel.textContent = `Phone: ${contact.phone}`;\r\n\r\n        const emailLabel = document.createElement('label');\r\n        emailLabel.textContent = `Email: ${contact.email}`;\r\n\r\n        const editButton = document.createElement('button');\r\n        editButton.textContent = 'Edit';\r\n        editButton.addEventListener('click', () => {\r\n            const newFirstName = prompt('Enter a new first name:', contact.firstName);\r\n            const newLastName = prompt('Enter a new last name:', contact.lastName);\r\n            const newPhone = prompt('Enter a new phone number:', contact.phone);\r\n            const newEmail = prompt('Enter a new email address:', contact.email);\r\n\r\n            if (newFirstName !== null && newLastName !== null && newPhone !== null && newEmail !== null) {\r\n                contacts[index] = {\r\n                    firstName: newFirstName.trim(),\r\n                    lastName: newLastName.trim(),\r\n                    phone: newPhone.trim(),\r\n                    email: newEmail.trim()\r\n                };\r\n                saveContacts();\r\n                renderContacts();\r\n            }\r\n        });\r\n\r\n        const deleteButton = document.createElement('button');\r\n        deleteButton.textContent = 'Delete';\r\n        deleteButton.addEventListener('click', () => {\r\n            contacts.splice(index, 1);\r\n            saveContacts();\r\n            renderContacts();\r\n        });\r\n\r\n        contactElement.appendChild(nameLabel);\r\n        contactElement.appendChild(phoneLabel);\r\n        contactElement.appendChild(emailLabel);\r\n        contactElement.appendChild(editButton);\r\n        contactElement.appendChild(deleteButton);\r\n\r\n        contactList.appendChild(contactElement);\r\n    });\r\n}\r\n\r\ncontactForm.addEventListener('submit', function (event) {\r\n    event.preventDefault();\r\n\r\n    const newContact = {\r\n        firstName: firstNameInput.value.trim(),\r\n        lastName: lastNameInput.value.trim(),\r\n        phone: phoneInput.value.trim(),\r\n        email: emailInput.value.trim()\r\n    };\r\n\r\n    contacts.push(newContact);\r\n    saveContacts();\r\n    contactForm.reset();\r\n    renderContacts();\r\n});\r\n\r\nrenderContacts();"],"names":["contactForm","document","getElementById","firstNameInput","lastNameInput","phoneInput","emailInput","contactList","contacts","JSON","parse","localStorage","getItem","saveContacts","setItem","stringify","renderContacts","innerHTML","forEach","contact","index","contactElement","createElement","classList","add","nameLabel","textContent","firstName","lastName","phoneLabel","phone","emailLabel","email","editButton","addEventListener","newFirstName","prompt","newLastName","newPhone","newEmail","trim","deleteButton","splice","appendChild","event","preventDefault","newContact","value","push","reset"],"version":3,"file":"index5.7c75d281.js.map"}
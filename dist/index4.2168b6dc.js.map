{"mappings":"ACCI,MAAM,EAAe,SAAS,cAAc,CAAC,gBACvC,EAAW,SAAS,cAAc,CAAC,OACnC,EAAe,SAAS,cAAc,CAAC,gBAGvC,EAAY,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,eAAiB,EAAE,CAErE,SAAS,IACL,aAAa,OAAO,CAAC,YAAa,KAAK,SAAS,CAAC,GACrD,CAEA,SAAS,IACL,EAAa,SAAS,CAAG,GAEzB,EAAU,OAAO,CAAC,CAAC,EAAU,KACzB,IAAM,EAAkB,SAAS,aAAa,CAAC,OAC/C,EAAgB,SAAS,CAAC,GAAG,CAAC,YAE9B,IAAM,EAAW,SAAS,aAAa,CAAC,QACxC,CAAA,EAAS,IAAI,CAAG,WAChB,EAAS,OAAO,CAAG,EAAS,OAAO,EAAI,CAAA,EACvC,EAAS,gBAAgB,CAAC,SAAU,KAChC,CAAS,CAAC,EAAM,CAAC,OAAO,CAAG,EAAS,OAAO,CAC3C,IACA,GACJ,GAEA,IAAM,EAAW,SAAS,aAAa,CAAC,QACxC,CAAA,EAAS,WAAW,CAAG,EAAS,GAAG,CAEnC,IAAM,EAAa,SAAS,aAAa,CAAC,SAC1C,CAAA,EAAW,WAAW,CAAG,OACzB,EAAW,gBAAgB,CAAC,QAAS,KACjC,IAAM,EAAS,OAAO,mBAAoB,EAAS,GAAG,CACvC,QAAX,IACA,CAAS,CAAC,EAAM,CAAC,GAAG,CAAG,EAAO,IAAI,GAClC,IACA,IAER,GAEA,IAAM,EAAe,SAAS,aAAa,CAAC,SAC5C,CAAA,EAAa,WAAW,CAAG,SAC3B,EAAa,gBAAgB,CAAC,QAAS,KACnC,EAAU,MAAM,CAAC,EAAO,GACxB,IACA,GACJ,GAEA,EAAgB,WAAW,CAAC,GAC5B,EAAgB,WAAW,CAAC,GAC5B,EAAgB,WAAW,CAAC,GAC5B,EAAgB,WAAW,CAAC,GAE5B,EAAa,WAAW,CAAC,EAC7B,EACJ,CAEA,EAAa,gBAAgB,CAAC,SAAU,SAAU,CAAK,EACnD,EAAM,cAAc,GAEpB,IAAM,EAAS,EAAS,KAAK,CAAC,IAAI,EACnB,CAAA,KAAX,IAEJ,EAAU,IAAI,CAAC,CAAE,IAAK,CAAO,GAC7B,IACA,EAAS,KAAK,CAAG,GACjB,IACJ,GACA","sources":["<anon>","index4.js"],"sourcesContent":["const bookmarkForm = document.getElementById(\"bookmarkForm\");\nconst urlInput = document.getElementById(\"url\");\nconst bookmarkList = document.getElementById(\"bookmarkList\");\n// Load bookmarks from localStorage\nconst bookmarks = JSON.parse(localStorage.getItem(\"bookmarks\")) || [];\nfunction saveBookmarks() {\n    localStorage.setItem(\"bookmarks\", JSON.stringify(bookmarks));\n}\nfunction renderBookmarks() {\n    bookmarkList.innerHTML = \"\";\n    bookmarks.forEach((bookmark, index)=>{\n        const bookmarkElement = document.createElement(\"div\");\n        bookmarkElement.classList.add(\"bookmark\");\n        const checkbox = document.createElement(\"input\");\n        checkbox.type = \"checkbox\";\n        checkbox.checked = bookmark.checked || false;\n        checkbox.addEventListener(\"change\", ()=>{\n            bookmarks[index].checked = checkbox.checked;\n            saveBookmarks();\n            renderBookmarks();\n        });\n        const urlLabel = document.createElement(\"label\");\n        urlLabel.textContent = bookmark.url;\n        const editButton = document.createElement(\"button\");\n        editButton.textContent = \"Edit\";\n        editButton.addEventListener(\"click\", ()=>{\n            const newURL = prompt(\"Enter a new URL:\", bookmark.url);\n            if (newURL !== null) {\n                bookmarks[index].url = newURL.trim();\n                saveBookmarks();\n                renderBookmarks();\n            }\n        });\n        const deleteButton = document.createElement(\"button\");\n        deleteButton.textContent = \"Delete\";\n        deleteButton.addEventListener(\"click\", ()=>{\n            bookmarks.splice(index, 1);\n            saveBookmarks();\n            renderBookmarks();\n        });\n        bookmarkElement.appendChild(checkbox);\n        bookmarkElement.appendChild(urlLabel);\n        bookmarkElement.appendChild(editButton);\n        bookmarkElement.appendChild(deleteButton);\n        bookmarkList.appendChild(bookmarkElement);\n    });\n}\nbookmarkForm.addEventListener(\"submit\", function(event) {\n    event.preventDefault();\n    const newURL = urlInput.value.trim();\n    if (newURL === \"\") return;\n    bookmarks.push({\n        url: newURL\n    });\n    saveBookmarks();\n    urlInput.value = \"\";\n    renderBookmarks();\n});\nrenderBookmarks();\n\n//# sourceMappingURL=index4.2168b6dc.js.map\n","\r\n    const bookmarkForm = document.getElementById('bookmarkForm');\r\n    const urlInput = document.getElementById('url');\r\n    const bookmarkList = document.getElementById('bookmarkList');\r\n\r\n    // Load bookmarks from localStorage\r\n    const bookmarks = JSON.parse(localStorage.getItem('bookmarks')) || [];\r\n\r\n    function saveBookmarks() {\r\n        localStorage.setItem('bookmarks', JSON.stringify(bookmarks));\r\n    }\r\n\r\n    function renderBookmarks() {\r\n        bookmarkList.innerHTML = '';\r\n\r\n        bookmarks.forEach((bookmark, index) => {\r\n            const bookmarkElement = document.createElement('div');\r\n            bookmarkElement.classList.add('bookmark');\r\n\r\n            const checkbox = document.createElement('input');\r\n            checkbox.type = 'checkbox';\r\n            checkbox.checked = bookmark.checked || false;\r\n            checkbox.addEventListener('change', () => {\r\n                bookmarks[index].checked = checkbox.checked;\r\n                saveBookmarks();\r\n                renderBookmarks();\r\n            });\r\n\r\n            const urlLabel = document.createElement('label');\r\n            urlLabel.textContent = bookmark.url;\r\n\r\n            const editButton = document.createElement('button');\r\n            editButton.textContent = 'Edit';\r\n            editButton.addEventListener('click', () => {\r\n                const newURL = prompt('Enter a new URL:', bookmark.url);\r\n                if (newURL !== null) {\r\n                    bookmarks[index].url = newURL.trim();\r\n                    saveBookmarks();\r\n                    renderBookmarks();\r\n                }\r\n            });\r\n\r\n            const deleteButton = document.createElement('button');\r\n            deleteButton.textContent = 'Delete';\r\n            deleteButton.addEventListener('click', () => {\r\n                bookmarks.splice(index, 1);\r\n                saveBookmarks();\r\n                renderBookmarks();\r\n            });\r\n\r\n            bookmarkElement.appendChild(checkbox);\r\n            bookmarkElement.appendChild(urlLabel);\r\n            bookmarkElement.appendChild(editButton);\r\n            bookmarkElement.appendChild(deleteButton);\r\n\r\n            bookmarkList.appendChild(bookmarkElement);\r\n        });\r\n    }\r\n\r\n    bookmarkForm.addEventListener('submit', function (event) {\r\n        event.preventDefault();\r\n\r\n        const newURL = urlInput.value.trim();\r\n        if (newURL === '') return;\r\n\r\n        bookmarks.push({ url: newURL });\r\n        saveBookmarks();\r\n        urlInput.value = '';\r\n        renderBookmarks();\r\n    });\r\n    renderBookmarks();"],"names":["bookmarkForm","document","getElementById","urlInput","bookmarkList","bookmarks","JSON","parse","localStorage","getItem","saveBookmarks","setItem","stringify","renderBookmarks","innerHTML","forEach","bookmark","index","bookmarkElement","createElement","classList","add","checkbox","type","checked","addEventListener","urlLabel","textContent","url","editButton","newURL","prompt","trim","deleteButton","splice","appendChild","event","preventDefault","value","push"],"version":3,"file":"index4.2168b6dc.js.map"}